connector.class=io.tabular.iceberg.connect.IcebergSinkConnector
errors.log.include.messages=true
iceberg.tables.auto-create-props.parquet.compression-codec=snappy
#flush.size=100
tasks.max=5
iceberg.tables.auto-create-props.parquet.page-size-bytes=1048576
iceberg.catalog.client.region=us-east-1
iceberg.tables.upsert-mode-enabled=true
rotate.interval.ms=60000
iceberg.tables.auto-create-props.format-version=2
iceberg.tables.auto-create-enabled=true
iceberg.tables=CTGout.INV_2000_Transaction,CTGout.INV_4000_Customer
value.converter=org.apache.kafka.connect.json.JsonConverter
errors.log.enable=true
key.converter=org.apache.kafka.connect.json.JsonConverter

iceberg.catalog.catalog-impl=org.apache.iceberg.aws.glue.GlueCatalog
iceberg.catalog.io-impl=org.apache.iceberg.aws.s3.S3FileIO
iceberg.catalog.warehouse=s3://mp2appsrvdevshell/esgdb/testing/

iceberg.tables.default-partition-by=FileID,year(TransactionDate)

topics=iceberg.ESG.CTGout.INV_2000_Transaction,iceberg.ESG.CTGout.INV_4000_Customer
key.converter.schemas.enable=false
iceberg.tables.auto-create-props.write.target-file-size-bytes=134217728
iceberg.tables.namespace=esgdb
value.converter.schemas.enable=false

iceberg.tables.schema-case-insensitive=true

iceberg.tables.default-id-columns=FileID,FileSequence
#iceberg.table.ESG.CTGout.INV_4000_Customer.partition-by=CustomerIdentificationNumber

# Specify the consumer group ID
consumer.group.id=iceberg-sink-group

#security.protocol=SASL_SSL
#sasl.mechanism=AWS_IAM
#sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

